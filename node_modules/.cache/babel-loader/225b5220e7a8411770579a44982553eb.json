{"ast":null,"code":"var _jsxFileName = \"E:\\\\h\\u1ECDc t\\u1EADp\\\\react\\\\Assignment 02 (Starter Code)\\\\src\\\\components\\\\ResultList\\\\ResultList.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport classes from \"./Search.module.css\";\nimport useGetData from \"../CustomHook/use-GetData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"\";\n\nconst ResultList = props => {\n  _s();\n\n  const [movie, setMovie] = useState([]);\n  useGetData(`https://api.themoviedb.org/3/search/movie?api_key=3997fc9014661d7c2ce89c2bbea4b9f8&language=en-US&query=${props.passValue}&include_adult=false`, searchHandle, props.passValue); // trong useData có dùng useEffect, vì ở trang chủ ta chỉ cần hiện thị API cho sẵn nên ko cần cập nhật, do đó không truyền vào dependence cho useEffect, nhưng ở trang search này do người dùng thay đổi thông tin nhập vào nên ta cần phải chạy lại useEffect nên mới truyền thêm tham số thứ 3 dependence vào\n\n  function searchHandle(e) {\n    setMovie(e.results); // console.log(movie);\n  }\n\n  function clickHandle(e) {\n    // console.log(e.target.id);\n    const tam = movie.filter(item => {\n      // console.log(item.id);\n      // console.log(+e.target.id);\n      return item.id === +e.target.id;\n    }); // ở đây ta chỉ cần lấy thông tin khi click vào 1 hình chứ ko cần render hay cập nhật UI sau khi click, nên ta chỉ dùng 1 biến let thông thường là được, ko nên dùng state thay cho biến vì state ko cập nhật liền nên nó gây ra độ trễ chương trình\n\n    props.getDetail(tam[0]);\n  }\n\n  const list = movie.map(item => {\n    // console.log(arr);\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      id: item.id,\n      src: `https://image.tmdb.org/t/p/original/${item.poster_path}`,\n      alt: \"none\",\n      width: \"200px\",\n      height: \"auto\",\n      className: classes.poster,\n      onClick: clickHandle\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.frame,\n    children: list\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ResultList, \"UyvAunH7yPBf90wjneITU+gWocg=\", false, function () {\n  return [useGetData];\n});\n\n_c = ResultList;\nexport default ResultList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultList\");","map":{"version":3,"names":["useState","classes","useGetData","API_KEY","ResultList","props","movie","setMovie","passValue","searchHandle","e","results","clickHandle","tam","filter","item","id","target","getDetail","list","map","poster_path","poster","frame"],"sources":["E:/học tập/react/Assignment 02 (Starter Code)/src/components/ResultList/ResultList.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nimport classes from \"./Search.module.css\";\r\nimport useGetData from \"../CustomHook/use-GetData\";\r\n\r\nconst API_KEY = \"\";\r\n\r\nconst ResultList = (props) => {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useGetData(\r\n    `https://api.themoviedb.org/3/search/movie?api_key=3997fc9014661d7c2ce89c2bbea4b9f8&language=en-US&query=${props.passValue}&include_adult=false`,\r\n    searchHandle,\r\n    props.passValue\r\n  );\r\n  // trong useData có dùng useEffect, vì ở trang chủ ta chỉ cần hiện thị API cho sẵn nên ko cần cập nhật, do đó không truyền vào dependence cho useEffect, nhưng ở trang search này do người dùng thay đổi thông tin nhập vào nên ta cần phải chạy lại useEffect nên mới truyền thêm tham số thứ 3 dependence vào\r\n\r\n  function searchHandle(e) {\r\n    setMovie(e.results);\r\n    // console.log(movie);\r\n  }\r\n\r\n  function clickHandle(e) {\r\n    // console.log(e.target.id);\r\n\r\n    const tam = movie.filter((item) => {\r\n      // console.log(item.id);\r\n      // console.log(+e.target.id);\r\n      return item.id === +e.target.id;\r\n    });\r\n\r\n    // ở đây ta chỉ cần lấy thông tin khi click vào 1 hình chứ ko cần render hay cập nhật UI sau khi click, nên ta chỉ dùng 1 biến let thông thường là được, ko nên dùng state thay cho biến vì state ko cập nhật liền nên nó gây ra độ trễ chương trình\r\n\r\n    props.getDetail(tam[0]);\r\n  }\r\n\r\n  const list = movie.map((item) => {\r\n    // console.log(arr);\r\n    return (\r\n      <img\r\n        key={item.id}\r\n        id={item.id}\r\n        src={`https://image.tmdb.org/t/p/original/${item.poster_path}`}\r\n        alt=\"none\"\r\n        width=\"200px\"\r\n        height=\"auto\"\r\n        className={classes.poster}\r\n        onClick={clickHandle}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <div className={classes.frame}>{list}</div>;\r\n};\r\n\r\nexport default ResultList;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,OAAO,GAAG,EAAhB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAAA;;EAC5B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EAEAE,UAAU,CACP,2GAA0GG,KAAK,CAACG,SAAU,sBADnH,EAERC,YAFQ,EAGRJ,KAAK,CAACG,SAHE,CAAV,CAH4B,CAQ5B;;EAEA,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;IACvBH,QAAQ,CAACG,CAAC,CAACC,OAAH,CAAR,CADuB,CAEvB;EACD;;EAED,SAASC,WAAT,CAAqBF,CAArB,EAAwB;IACtB;IAEA,MAAMG,GAAG,GAAGP,KAAK,CAACQ,MAAN,CAAcC,IAAD,IAAU;MACjC;MACA;MACA,OAAOA,IAAI,CAACC,EAAL,KAAY,CAACN,CAAC,CAACO,MAAF,CAASD,EAA7B;IACD,CAJW,CAAZ,CAHsB,CAStB;;IAEAX,KAAK,CAACa,SAAN,CAAgBL,GAAG,CAAC,CAAD,CAAnB;EACD;;EAED,MAAMM,IAAI,GAAGb,KAAK,CAACc,GAAN,CAAWL,IAAD,IAAU;IAC/B;IACA,oBACE;MAEE,EAAE,EAAEA,IAAI,CAACC,EAFX;MAGE,GAAG,EAAG,uCAAsCD,IAAI,CAACM,WAAY,EAH/D;MAIE,GAAG,EAAC,MAJN;MAKE,KAAK,EAAC,OALR;MAME,MAAM,EAAC,MANT;MAOE,SAAS,EAAEpB,OAAO,CAACqB,MAPrB;MAQE,OAAO,EAAEV;IARX,GACOG,IAAI,CAACC,EADZ;MAAA;MAAA;MAAA;IAAA,QADF;EAYD,CAdY,CAAb;EAgBA,oBAAO;IAAK,SAAS,EAAEf,OAAO,CAACsB,KAAxB;IAAA,UAAgCJ;EAAhC;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CA9CD;;GAAMf,U;UAGJF,U;;;KAHIE,U;AAgDN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}